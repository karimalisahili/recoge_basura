syntax = "proto3";

package game;

// dónde debe ubicarse el paquete Go generado y qué nombre de importación debe tener.
//se ubicara en la carpeta /server/protos
option go_package = "/protos";

service GameService {
  rpc Connect(stream PlayerAction) returns (stream GameState);
}

message PlayerAction {
  string player_id = 1;
  ActionType action = 2;
  Direction direction = 3;
  optional int32 total_players = 4; // Solo usado por el primer jugador que se conecta
  optional string pickup_trash_id = 5; // id de basura a recoger (si aplica)
  optional string deposit_trash_id = 6; // id de basura a depositar
  optional string deposit_bin_type = 7; // tipo de basurero
}

enum ActionType {
  MOVE = 0;
  ATTACK = 1;
  JUMP = 2;
}

enum Direction {
  UP = 0;
  DOWN = 1;
  LEFT = 2;
  RIGHT = 3;
  NONE = 4;
}

message PlayerState {
  string player_id = 1;
  int32 x = 2;
  int32 y = 3;
}

// Estado de una basura
message TrashState {
  string id = 1;
  int32 x = 2;
  int32 y = 3;
  string type = 4;
  string image = 5; // nombre de la imagen exacta
}

message GameState {
  int32 tick = 1;
  repeated PlayerState players = 2;
  bool game_started = 3;
  repeated TrashState trash = 4; // lista de basuras activas
  map<string, int32> scores = 5; // puntajes por jugador
  bool game_finished = 6; //campo para sincronizar el final del juego
}